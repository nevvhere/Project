import streamlit as st
import pandas as pd
import plotly.express as px
import matplotlib.pyplot as plt
import seaborn as sns
from collections import Counter

# –ó–∞–≥—Ä—É–∑–∫–∞ CSS-—Å—Ç–∏–ª–µ–π
def load_css():
    with open("dashboard/assets/style.css") as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_data():
    return pd.read_csv("../data/soundcloud_tracks_cleaned.csv", sep=';')

# –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ç–µ–≥–æ–≤
def analyze_tags(tags_series):
    all_tags = []
    for tags in tags_series.dropna():
        all_tags.extend(tags.split())
    return Counter(all_tags)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    load_css()
    st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ SoundCloud")
    st.markdown("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–µ–∫–∞—Ö –∏ –∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    df = load_data()
    
    # –°–∞–π–¥–±–∞—Ä —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    with st.sidebar:
        st.header("–§–∏–ª—å—Ç—Ä—ã")
        selected_tags = st.multiselect(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä—ã",
            options=df['tag'].unique(),
            default=df['tag'].unique()
        )
        min_plays = st.slider(
            "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–π",
            min_value=int(df['listens'].min()),
            max_value=int(df['listens'].max()),
            value=int(df['listens'].quantile(0.25))
        )
    
    # —Ñ–∏–ª—å—Ç—Ä—ã
    filtered_df = df[
        (df['tag'].isin(selected_tags)) & 
        (df['listens'] >= min_plays)
    ]
    
    # –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    col1, col2, col3 = st.columns(3)
    col1.metric("–í—Å–µ–≥–æ —Ç—Ä–µ–∫–æ–≤", len(filtered_df))
    col2.metric("–°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è", f"{filtered_df['listens'].mean():,.0f}")
    col3.metric("–°—Ä–µ–¥–Ω–∏–µ –ª–∞–π–∫–∏", f"{filtered_df['likes'].mean():,.0f}")
    
    # –í–∫–ª–∞–¥–∫–∏
    tab1, tab2, tab3 = st.tabs(["üìà –û–±–∑–æ—Ä", "üéµ –ü–æ –∂–∞–Ω—Ä–∞–º", "üèÜ –¢–æ–ø —Ç—Ä–µ–∫–∏"])
    
    with tab1:
        # –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞
        st.subheader("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏")
        corr = filtered_df[['listens', 'likes', 'comments']].corr()
        fig2, ax = plt.subplots()
        sns.heatmap(corr, annot=True, cmap='coolwarm', ax=ax)
        st.pyplot(fig2)
    
    with tab2:
        st.header("–ê–Ω–∞–ª–∏–∑ –ø–æ –∂–∞–Ω—Ä–∞–º")
        
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∂–∞–Ω—Ä–æ–≤
        genre_stats = filtered_df.groupby('tag').agg({
            'listens': 'mean',
            'likes': 'mean',
            'comments': 'mean'
        }).reset_index()
        
        fig3 = px.bar(
            genre_stats,
            x='tag',
            y=['listens', 'likes', 'comments'],
            title="–°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ –∂–∞–Ω—Ä–∞–º",
            barmode='group',
            labels={'value': '–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', 'variable': '–ú–µ—Ç—Ä–∏–∫–∞'}
        )
        st.plotly_chart(fig3, use_container_width=True)
        
        # Boxplot –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–π –ø–æ –∂–∞–Ω—Ä–∞–º
        fig4 = px.box(
            filtered_df,
            x='tag',
            y='listens',
            title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–π –ø–æ –∂–∞–Ω—Ä–∞–º",
            log_y=True
        )
        st.plotly_chart(fig4, use_container_width=True)
    
    with tab3:
        st.header("–¢–æ–ø —Ç—Ä–µ–∫–æ–≤")
        
        # –¢–æ–ø –ø–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è–º
        top_n = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–∫–æ–≤ –≤ —Ç–æ–ø–µ", 5, 50, 10)
        top_tracks = filtered_df.nlargest(top_n, 'listens')
        
        fig5 = px.bar(
            top_tracks,
            x='listens',
            y='name',
            orientation='h',
            color='tag',
            title=f"–¢–æ–ø {top_n} —Ç—Ä–µ–∫–æ–≤ –ø–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è–º",
            labels={'listens': '–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è', 'name': '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞'}
        )
        st.plotly_chart(fig5, use_container_width=True)
        
        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏ –≤ —Ç–æ–ø–µ
        st.subheader("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏ –≤ —Ç–æ–ø-—Ç—Ä–µ–∫–∞—Ö")
        tag_counts = analyze_tags(top_tracks['user_tags'])
        tags_df = pd.DataFrame(tag_counts.most_common(15), columns=['–¢–µ–≥', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'])
        
        fig6 = px.pie(
            tags_df,
            names='–¢–µ–≥',
            values='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
            title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –≤ —Ç–æ–ø-—Ç—Ä–µ–∫–∞—Ö"
        )
        st.plotly_chart(fig6, use_container_width=True)

if __name__ == "__main__":
    main()
